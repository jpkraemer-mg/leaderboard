import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '6.4.0'
}

group = 'quest.darkoro'
version = '0.4.2'


java {
	sourceCompatibility = JavaVersion.VERSION_17
}

sourceSets {
	main {
		java {
			srcDirs("build/generate-resources/src/main/java", "src/main/java")
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.26'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation ('net.dv8tion:JDA:5.2.1') {
		exclude module: "opus-java"
	}
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('openApiGenerateJavaSpring', GenerateTask) {
	group 'openapi tools'

	generatorName = "spring"
	inputSpec = "$rootDir/api/openapi.yaml"
	//noinspection All
	outputDir = "$rootDir/build/generate-resources/main"
	//noinspection All
	additionalProperties = [library                : "spring-cloud",
							interfacesOnly         : true,
							useSpringBoot3         : true,
							skipDefaultInterface   : true,
							generateSupportingFiles: false,
							hideGenerationTimestamp: true,
							useTags                : true,
							useOptional            : true,
							dateLibrary            : "java8",]
	openapiNormalizer.put("REF_AS_PARENT_IN_ALLOF", "true")
	apiPackage = "quest.darkoro.leaderboard.api"
	modelPackage = "quest.darkoro.leaderboard.api.model"
	groupId = "quest.darkoro"
	id = "leaderboard"
	version = project.version

	doLast {
		delete {
			delete fileTree('build/generate-resources/main/src/main/java') {
				include '**/*ApiClient.java'
				include '**/org/**'
			}
		}
		copy {
			from 'build/generate-resources/main'
			into 'build/generate-resources'
		}
	}
}
tasks.compileJava.dependsOn('openApiGenerateJavaSpring')

tasks.bootRun {
	args '--spring.profiles.active=dev'
}